---
- name: Check if Docker is already present.
  command: which docker
  failed_when: false
  changed_when: false
  check_mode: false
  register: docker_command_result

- name: Download Docker install convenience script.
  get_url:
    url: https://get.docker.com/
    dest: /tmp/get-docker.sh
    mode: 0775
  when:
   - docker_command_result.rc == 1
   - ansible_facts.os_family != "Darwin"

- name: Run Docker install convenience script.
  command: /tmp/get-docker.sh
  environment:
    CHANNEL: stable
  when:
   - docker_command_result.rc == 1
   - ansible_facts.os_family != "Darwin"

- name: Download Docker install via Homebrew script.
  community.general.homebrew_cask:
    name: docker
    state: present
  when:
   - docker_command_result.rc == 1
   - ansible_facts.os_family == "Darwin"

- name: Ensure Docker is started.
  service:
    name: docker
    state: started
    enabled: true
  when:
   - docker_command_result.rc == 1
   - ansible_facts.os_family != "Darwin"

- name: Ensure dependacies are installed (Debian)
  apt:
    name:
      - libffi-dev
      - libssl-dev
      - python3-dev
      - python3-pip
      - git
      - rsync
    state: present
  when: ansible_facts.os_family == "Debian"

- name: Ensure dependacies are installed (Arch)
  apt:
    name:
      - libffi
      - openssl
      - base-devel
      - python3-pip
      - git
      - rsync
    state: present
  when: ansible_facts.os_family == "Archlinux"

- name: Ensure dependacies are installed (Arch)
  apt:
    name:
      - libffi
      - openssl
      - base-devel
      - python3-pip
      - git
      - rsync
    state: present
  when: ansible_facts.os_family == "Archlinux"

- name: Install Docker Compose using Pip.
  pip:
    name: docker-compose
    state: present
    executable: pip3
  when:
    - ansible_facts.os_family == "Debian"
    - ansible_facts.os_family == "Archlinux"

- name: Install Docker Compoose using Brew
  community.general.homebrew:
    name: docker-compose
    state: present

- name: Ensure {{ ansible_user }} use is added to the docker group.
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  when: ansible_facts.os_family == "Archlinux"

# reset_conection doesn't support conditionals
- name: Reset conection so doccker group is picked up.
  meta: reset_connection
